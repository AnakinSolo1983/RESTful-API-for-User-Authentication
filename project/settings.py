"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-98p%gbus*ji@(y@c68-z5uiy8ms#e3-sq=!8_=4226ov45x5-f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = False

ALLOWED_HOSTS = ["*"]
#ALLOWED_HOSTS = ['*']
#CSRF_TRUSTED_ORIGINS = ["http://*.on-acorn.io", "https://*.on-acorn.io"]
#CSRF_TRUSTED_ORIGINS = ['http://*', 'https://*']
CRSF_TRUSTED_ORIGINS = ['http://localhost','http://127.0.0.1','https://yourdomain.com']
CSRF_COOKIE_SECURE = False

#import os
#ALLOWED_HOSTS = ['user_restapi.herokuapp.com', 'localhost', '127.0.0.1']
#WSGIPassAuthorization On

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "api",
    "rest_framework",
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    'oauth2_provider',
]

"""OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'}
}"""

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    #'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


#import dj_database_url



# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
#import dj-database-url  
#pip install django gunicorn psycopg2-binary dj-database-url

#import os
#"""
DATABASES = {
    
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }

}#"""


""""default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("MARIADB_DATABASE"),
        "USER": os.getenv("MARIADB_USER"),
        "PASSWORD": os.getenv("MARIADB_ROOT_PASSWORD"),
        "HOST": os.getenv("MARIADB_HOST"),
        "PORT": os.getenv("MARIADB_PORT", 3306),
    }"""

"""'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }"""
"""'default': dj_database_url.config(
        # Replace this value with your local database's connection string.
        default='postgresql://postgres:postgres@localhost:5432/mysite',
        conn_max_age=600
    )"""

# Import dj-database-url at the beginning of the file.
#import dj_database_url
# Replace the SQLite DATABASES configuration with PostgreSQL:
"""DATABASES = {
    
    'default': dj_database_url.config(
        conn_max_age=600,
        conn_health_checks=True,
    ),
}#"""

#AUTH_USER_MODEL='auth.User',
# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
#import os
STATIC_URL = 'static/'
#STATIC_URL = '/static/'
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
#STATIC_ROOT = BASE_DIR / "staticfiles"

#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

"""
# This production code might break development mode, so we check whether we're in DEBUG mode
if not DEBUG:
    # Tell Django to copy static assets into a path called `staticfiles` (this is specific to Render)
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    # Enable the WhiteNoise storage backend, which compresses static files to reduce disk use
    # and renames the files with unique names for each version to support long-term caching
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
"""
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Authentication backends
AUTHENTICATION_BACKENDS = (
        'django.contrib.auth.backends.ModelBackend',
    )

REST_FRAMEWORK = {
   'DEFAULT_AUTHENTICATION_CLASSES': (
       
       'rest_framework.authentication.TokenAuthentication',
       'rest_framework_simplejwt.authentication.JWTAuthentication',
       'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        #'rest_framework_simplejwt.tokens',
   ),
   'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
        'rest_framework.permissions.IsAdminUser', 
        'rest_framework.permissions.IsAuthenticated', 
        #'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
   ),
}

SIMPLE_JWT = {
 'TOKEN_OBTAIN_SERIALIZER': 'users.serializers.CustomTokenObtainPairSerializer',
 "ACCESS_TOKEN_LIFETIME": timedelta(seconds=30),
 "REFRESH_TOKEN_LIFETIME": timedelta(days=30),
 "ROTATE_REFRESH_TOKENS": True,
 "BLACKLIST_AFTER_ROTATION": True,

}
